{"ast":null,"code":"var _jsxFileName = \"/home/darican/Desktop/bootcamp/Homework/memory-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport CarCard from \"./components/CarCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport cars from \"./cars.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cars: cars,\n      highScore: 0,\n      score: 0,\n      notSelectedCars: cars,\n      jumbotronPrompt: \"Click a mustang to start\"\n    };\n\n    this.selectCar = id => {\n      //If an Image already clicked set Score back to 0\n      const clickCar = this.state.notSelectedCars.find(item => item.id === id);\n\n      if (clickCar === undefined) {\n        this.setState({\n          jumbotronPrompt: \"You lost, beat your high score!\",\n          highScore: this.state.score > this.state.highScore ? this.state.score : this.state.highScore,\n          score: 0,\n          cars: cars,\n          notSelectedCars: cars\n        });\n      } else {\n        // If an Image is clicked increment Score by 1\n        const newCars = this.state.notSelectedCars.filter(item => item.id !== id);\n        this.setState({\n          jumbotronPrompt: \"Keep guessing!\",\n          score: this.state.score + 1,\n          cars: cars,\n          notSelectedCars: newCars\n        });\n      }\n\n      this.shuffleArray();\n    };\n\n    this.shuffleArray = () => {\n      for (let i = this.state.cars.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [this.state.cars[j], this.state.cars[i]];\n        this.state.cars[i] = _ref[0];\n        this.state.cars[j] = _ref[1];\n      }\n\n      this.setState({\n        cars\n      });\n    };\n  }\n\n  // Map over this.state.cars and render a CarCard component for each car object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      score: this.state.score,\n      jumbotronPrompt: this.state.jumbotronPrompt,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.state.cars.map(car => React.createElement(CarCard, {\n      id: car.id,\n      image: car.image,\n      selectCar: this.selectCar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/darican/Desktop/bootcamp/Homework/memory-game/src/App.js"],"names":["React","Component","CarCard","Wrapper","Jumbotron","cars","App","state","highScore","score","notSelectedCars","jumbotronPrompt","selectCar","id","clickCar","find","item","undefined","setState","newCars","filter","shuffleArray","i","length","j","Math","floor","random","render","map","car","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CarCard from \"./components/CarCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport cars from \"./cars.json\";\n\nclass App extends Component {\n  // Setting this.state.cars to the cars json array\n  state = {\n    cars: cars,\n    highScore: 0,\n    score: 0,\n    notSelectedCars: cars,\n    jumbotronPrompt: \"Click a mustang to start\"\n  };\n\n  selectCar = id => {\n    //If an Image already clicked set Score back to 0\n    const clickCar = this.state.notSelectedCars.find(item => item.id === id);\n    if(clickCar === undefined) {\n      this.setState({\n        jumbotronPrompt: \"You lost, beat your high score!\",\n        highScore: (this.state.score > this.state.highScore) ? this.state.score : this.state.highScore,\n        score: 0,\n        cars: cars,\n        notSelectedCars: cars\n      })\n    }\n    else{\n      // If an Image is clicked increment Score by 1\n      const newCars = this.state.notSelectedCars.filter(item => item.id !== id);            \n      this.setState({ \n        jumbotronPrompt: \"Keep guessing!\",\n          score: this.state.score + 1,\n          cars: cars,\n          notSelectedCars: newCars\n      });\n    }\n    this.shuffleArray();\n  }\n  \n\n  //function to shuffle cars array\n  shuffleArray = () => {\n    for (let i = this.state.cars.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this.state.cars[i], this.state.cars[j]] = [this.state.cars[j], this.state.cars[i]];\n    }\n    this.setState({ cars });\n}\n  // Map over this.state.cars and render a CarCard component for each car object\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron \n        score={this.state.score} \n        jumbotronPrompt={this.state.jumbotronPrompt}\n        highScore={this.state.highScore} />\n\n        {this.state.cars.map(car => (\n          <CarCard\n            id={car.id}\n            image={car.image}\n            selectCar={this.selectCar}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}