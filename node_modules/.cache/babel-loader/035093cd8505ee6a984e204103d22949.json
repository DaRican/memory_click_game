{"ast":null,"code":"var _jsxFileName = \"/home/darican/Desktop/bootcamp/memory_click_game/src/App.js\";\nimport React, { Component } from \"react\";\nimport PlayerCard from \"./components/PlayerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport players from \"./players.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: players,\n      highScore: 0,\n      score: 0,\n      nonSelectPlayers: players,\n      jumbotronPrompt: \"Begin by clicking a Yankee\"\n    };\n\n    this.playerSelect = id => {\n      const yankeeClick = this.state.nonSelectPlayers.find(item => item.id === id);\n\n      if (yankeeClick === undefined) {\n        this.setState({\n          jumbotronPrompt: \"Game Over, Try Again\",\n          highScore: this.state.score > this.state.highScore ? this.state.score : this.state.highScore,\n          score: 0,\n          players: players,\n          nonSelectPlayers: players\n        });\n      } else {\n        const newPlayers = this.state.nonSelectPlayers.filter(item => item.id !== id);\n        this.setState({\n          jumbotronPrompt: \"Nope Try again\",\n          score: this.state.score + 1,\n          players: players,\n          nonSelectPlayers: newPlayers\n        });\n      }\n\n      this.arrayRearange();\n    };\n\n    this.arrayRearange = () => {\n      for (let i = this.state.players.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [this.state.players[j], this.state.players[i]];\n        this.state.players[i] = _ref[0];\n        this.state.players[j] = _ref[1];\n      }\n\n      this.setState({\n        players\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      score: this.state.score,\n      jumbotronPrompt: this.state.jumbotronPrompt,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.state.players.map(car => React.createElement(PlayerCard, {\n      id: car.id,\n      image: car.image,\n      playerSelect: this.playerSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/darican/Desktop/bootcamp/memory_click_game/src/App.js"],"names":["React","Component","PlayerCard","Wrapper","Jumbotron","players","App","state","highScore","score","nonSelectPlayers","jumbotronPrompt","playerSelect","id","yankeeClick","find","item","undefined","setState","newPlayers","filter","arrayRearange","i","length","j","Math","floor","random","render","map","car","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PlayerCard from \"./components/PlayerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport players from \"./players.json\";\n\nclass App extends Component {\n  \n  state = {\n    players: players,\n    highScore: 0,\n    score: 0,\n    nonSelectPlayers: players,\n    jumbotronPrompt: \"Begin by clicking a Yankee\"\n  };\n\n  playerSelect = id => {\n\n    const yankeeClick = this.state.nonSelectPlayers.find(item => item.id === id);\n    if(yankeeClick === undefined) {\n      this.setState({\n        jumbotronPrompt: \"Game Over, Try Again\",\n        highScore: (this.state.score > this.state.highScore) ? this.state.score : this.state.highScore,\n        score: 0,\n        players: players,\n        nonSelectPlayers: players\n      })\n    }\n    else{\n \n      const newPlayers = this.state.nonSelectPlayers.filter(item => item.id !== id);            \n      this.setState({ \n        jumbotronPrompt: \"Nope Try again\",\n          score: this.state.score + 1,\n          players: players,\n          nonSelectPlayers: newPlayers\n      });\n    }\n    this.arrayRearange();\n  }\n  \n\n \n  arrayRearange = () => {\n    for (let i = this.state.players.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this.state.players[i], this.state.players[j]] = [this.state.players[j], this.state.players[i]];\n    }\n    this.setState({ players });\n}\n\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron \n        score={this.state.score} \n        jumbotronPrompt={this.state.jumbotronPrompt}\n        highScore={this.state.highScore} />\n\n        {this.state.players.map(car => (\n          <PlayerCard\n            id={car.id}\n            image={car.image}\n            playerSelect={this.playerSelect}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}